{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Book Store",
    "description": "Book store"
  },
  "host": "localhost:3001",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/user/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "description": "user login system",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "description": "log in",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "user logs in",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Creates a user",
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/{userID}": {
      "parameters": [
        {
          "name": "userID",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Gets a user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "updates a user",
        "description": "updates existing user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "description": "User that we want to update",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "user is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}
